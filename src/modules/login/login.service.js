/* Automatically generated by './build/add-module.js' */
import MegHttp, { interceptors } from 'megvii-http';
import config from '@/utils/config.utils';

import store from '@/store';

/**
 * header 添加模块信息拦截器 add module info(alias source) to header
 * @param {*} config
 */
const setModuleInfo = (httpConfig) => {
  const {
    currentModule
  } = store.state;
  httpConfig.headers['Module-Alias'] = currentModule ? currentModule.alias : '';
  httpConfig.headers['Module-Source'] = currentModule ? currentModule.source : '';
  return httpConfig;
};
// path prefix
const galaxyUrl = config.apiPath.galaxyService;

// service path
const urls = {
  'login': `${galaxyUrl}/api/galaxy/v1/auth/users/login`, // 登录
  'loginCode': `${galaxyUrl}/api/galaxy/v1/auth/code`, // 登录验证码
};

// service methods
const LoginSrv = {
  /**
   * 获取登录验证码
   */
  getLoginCode() {
    return MegHttp.httpGet(urls.loginCode);
  },
  /**
   * 登录
   */
  login(params = {}) {
    return MegHttp.httpPost(urls.login, params, {
      interceptors: {
        request: [
          // 拦截器设置token头
          interceptors.request.setToken,
          // 请求header添加模块信息，供日志统计使用
          setModuleInfo
        ],
      },
    });
  },
  /**
   * pki 登录
   * @param {*} params
   */
  pkiLogin(params = {}) {
    return MegHttp.httpGet(urls.login, params);
  }
};

export default LoginSrv;
