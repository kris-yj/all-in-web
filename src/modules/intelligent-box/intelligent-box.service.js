/* Automatically generated by './build/add-module.js' */
import MegHttp from 'megvii-http';
import config from '@/utils/config.utils';

// path prefix
const baseUrl = config.apiPath.service; // 基础地址
const authUrl = config.apiPath.galaxyService;

// service path
const urls = {
  'getBoxList': `${baseUrl}/api/rainbow/v1/device/box/list`,
  'checkBoxExit': `${baseUrl}/api/rainbow/v1/device/box/check/name`, // 校验盒子名称是否存在
  'createBox': `${baseUrl}/api/rainbow/v1/device/box/add`, // 新建盒子
  'editBox': `${baseUrl}/api/rainbow/v1/device/box`, // 编辑盒子
  'queryBoxDetail': `${baseUrl}/api/rainbow/v1/device/box`, // 盒子详情
  'queryPanoramaConfig': `${baseUrl}/api/rainbow/v1/device/box`, // 全景图配置
  'queryVersionDetail': `${baseUrl}/api/rainbow/v1/device/box`, // 版本详情
  'batchDeleteBox': `${baseUrl}/api/rainbow/v1/device/box/delete/batch`,
  'getCameraListByBoxId': (id) => `${baseUrl}/api/rainbow/v1/device/cameras/boxes/${id}`,
  'getDownloadTemplate': `${baseUrl}/api/rainbow/v1/device/box/template/download`,
  'batchExport': `${baseUrl}/api/rainbow/v1/device/box/export/bySelected`,
  'allExport': `${baseUrl}/api/rainbow/v1/device/box/export/byItems`,
  'allDelete': `${baseUrl}/api/rainbow/v1/device/box/delete/all`,
  'downloadTemplate': `${baseUrl}/api/rainbow/v1/device/box/template/download`, // 导入盒子-下载模板
  'getViewUrl': `${baseUrl}/api/rainbow/v1/device/camera/viewUrl`, // 获取视频流地址
  'getHeartbeat': `${baseUrl}/api/rainbow/v1/device/camera/heartbeat`, // 获取视频预览心跳
  'onLineBox': `${baseUrl}/api/rainbow/v1/device/box/statistics`, // 获取在线盒子数量
  'checkBoxUrl': `${baseUrl}/api/rainbow/v1/device/box/check/url`, // 校验当前URL是否可以创建盒子
  'queryItemOrgTree': `${authUrl}/api/auth/v5/organizations/queryTree`, // 获取子部门树
  'queryCameraDetail': `${baseUrl}/api/rainbow/v1/device/cameras/`, // 查询相机详情
  'queryCameraDeviceInfo': (id) => `${baseUrl}/api/rainbow/v1/device/cameras/${id}/config`, // 查询相机配置信息
};
// service methods
const IntelligentBoxSrv = {

  /**
   * 在线盒子总数
  */
  getOnLineBox(params) {
    return MegHttp.httpPost(urls.onLineBox, params);
  },
  /**
   * 获取视频流地址
   */
  getViewUrl(params = {}) {
    return MegHttp.httpGet(urls.getViewUrl, params);
  },
  /**
   * 视频心跳
  */
  getHeartbeat(params = []) {
    return MegHttp.httpGet(urls.getHeartbeat, params);
  },
  /**
   * 全部删除
   */
  allDelete(params) {
    return MegHttp.httpPost(urls.allDelete, params);
  },
  /**
   * 批量导出
  */
  batchExport(params) {
    return MegHttp.httpPost(urls.batchExport, params);
  },
  /**
   * 下载盒子导入模板
   */
  getDownloadTemplate(params = {}) {
    return MegHttp.httpGet(urls.downloadTemplate, params);
  },
  /**
   * 全部导出
  */
  allExport(params) {
    return MegHttp.httpPost(urls.allExport, params);
  },
  /**
   * 盒子列表
  */
  getBoxList(params) {
    return MegHttp.httpPost(urls.getBoxList, params);
  },
  /*
  * 校验盒子名称是否存在
  * */
  checkBoxExist(params = {}) {
    return MegHttp.httpGet(urls.checkBoxExit, params);
  },
  /**
   * 新建盒子
   */
  createBox(params = {}) {
    return MegHttp.httpPost(urls.createBox, params);
  },
  /**
   * 编辑盒子
   */
  editBox(params = {}) {
    return MegHttp.httpPost(`${urls.editBox}/${params.id}/update`, params, { transformParams: [] });
  },
  /**
   * 盒子详情
   */
  queryBoxDetail(params = {}) {
    return MegHttp.httpGet(`${urls.queryBoxDetail}/${params.id}`, params);
  },
  /**
   * 全景图配置
   */
  queryPanoramaConfig(params = {}) {
    return MegHttp.httpGet(`${urls.queryPanoramaConfig}/${params.id}/full`, params);
  },
  /**
   * 查询版本详情
   */
  queryVersionDetail(params = {}) {
    return MegHttp.httpGet(`${urls.queryVersionDetail}/${params.id}/version`, params);
  },
  /**
   * 批量删除盒子
   */
  batchDeleteBox(params) {
    return MegHttp.httpPost(urls.batchDeleteBox, params);
  },
  /*
   * 根据盒子id获取相机列表
   */
  getCameraListByBoxId(params = {}) {
    return MegHttp.httpGet(urls.getCameraListByBoxId(params.boxId));
  },
  /*
  * 校验相机url是否可以创建相机
  * */
  checkBoxUrl(params = {}) {
    return MegHttp.httpGet(urls.checkBoxUrl, params);
  },
  /**
   * 子部门树
   */
  getQueryItemOrgTree(params = {}) {
    return MegHttp.httpGet(urls.queryItemOrgTree, params);
  },
  queryCameraDetail(param) {
    return MegHttp.httpGet(`${urls.queryCameraDetail}${param}`);
  },
  /**
    * 相机设备信息
    */
  queryCameraDeviceInfo(param) {
    return MegHttp.httpGet(`${urls.queryCameraDeviceInfo(param)}`);
  },
};

export default IntelligentBoxSrv;
