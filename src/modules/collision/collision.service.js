/* Automatically generated by './build/add-module.js' */
import MegHttp from 'megvii-http';
import config from '@/utils/config.utils';

// MegHttp from insight-utils, MegHttp.httpGet or MegHttp.httpPost

// path prefix
const baseUrl = config.apiPath.service; // 基础地址

// service path
const urls = {
  list: `${baseUrl}/api/kunlun/judge/collision/list`,
  new: `${baseUrl}/api/kunlun/judge/collision`,
  delete: `${baseUrl}/api/kunlun/judge/collision/delete/`,
  cancel: `${baseUrl}/api/kunlun/judge/collision/cancel/`,
  albumList: `${baseUrl}/api/galaxy/v1/album/list`,
  result: `${baseUrl}/api/kunlun/judge/collision/result/`,
  threshold: `${baseUrl}/api/kunlun/judge/collision/threshold`, // 获取推荐阈值
  feedback: `${baseUrl}/api/capture/v5/capture/feedback`, // 无帮助反馈
  checkDupl: `${baseUrl}/api/kunlun/judge/collision/check/`,
  detail: `${baseUrl}/api/kunlun/judge/collision/detail/`,
  'regionCancel': `${baseUrl}/api/kunlun/judge/collision/cancel/`, // 终止任务
  'restartTask': `${baseUrl}/api/kunlun/judge/collision/run/`, // 重新开始任务
  'modifyJobName': `${baseUrl}/api/kunlun/judge/collision/rename/`, // 修改任务名
  'selectExport': `${baseUrl}/api/kunlun/judge/collision/result/export`,
  'collisionPause': `${baseUrl}/api/kunlun/judge/collision/pause/`,
  'collisionResume': `${baseUrl}/api/kunlun/judge/collision/resume/`,
};

// service methods
const CollisionSrv = {
  list: (params = {}) => MegHttp.httpPost(urls.list, params),
  new: (params = {}) => MegHttp.httpPost(urls.new, params),
  delete: (params = {}) => MegHttp.httpPost(`${urls.delete}/${params.id}`),
  cancel: (params = {}) => MegHttp.httpPost(`${urls.cancel}/${params.id}`),
  albumList: (params = {}) => MegHttp.httpPost(urls.albumList, params),
  result: (params = {}) => MegHttp.httpPost(`${urls.result}${params.id}`, params),
  threshold: () => MegHttp.httpGet(urls.threshold),
  feedback: (params = {}) => MegHttp.httpPost(urls.feedback, params),
  checkDupl: (params = {}) => MegHttp.httpGet(urls.checkDupl, params),
  detail: (params = {}) => MegHttp.httpGet(`${urls.detail}${params.id}`),
  regionCancel(params = '') {
    return MegHttp.httpPost(urls.regionCancel + params);
  },
  restartTask(params = '') {
    return MegHttp.httpPost(urls.restartTask + params);
  },
  // 修改任务名
  modifyJobName(params = {}) {
    return MegHttp.httpPost(`${urls.modifyJobName + params.jobId}/${params.jobName}`);
  },
  selectExport(params = {}) {
    return MegHttp.httpPost(urls.selectExport, params);
  },
  collisionPause(params = '') {
    return MegHttp.httpPost(urls.collisionPause + params);
  },
  collisionResume(params = '') {
    return MegHttp.httpPost(urls.collisionResume + params);
  },
};

export default CollisionSrv;
