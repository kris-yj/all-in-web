/* Automatically generated by './build/add-module.js' */
import MegHttp from 'megvii-http';
import config from '@/utils/config.utils';

// path prefix
const galaxyUrl = config.apiPath.galaxyService;

// path prefix
const baseUrl = config.apiPath.service; // 基础地址
// const auth = config.apiPath.auth; // auth地址

// service path
const urls = {
  // 事件列表
  list: `${baseUrl}/api/kunlun/event/events:search`,
  // 新建事件
  create: `${baseUrl}/api/kunlun/event/events`,
  // 编辑事件
  edit: `${baseUrl}/api/kunlun/event/events/{id}`,
  // 删除事件
  delete: `${baseUrl}/api/kunlun/event/events/{id}`,
  // 事件导出
  export: `${baseUrl}/api/kunlun/event/events/{id}:export`,
  // 根据eventId查询事件详情
  eventsDetailByOne: `${baseUrl}/api/kunlun/event/events/{id}`,
  // 研判过程查询
  processList: `${baseUrl}/api/kunlun/event/process:search`,
  // 事件关联数据查询
  relatedEvents: `${baseUrl}/api/kunlun/event/events:searchAll`,
  // clueCategory
  clueAggList: `${baseUrl}/api/kunlun/event/clues:searchAll`,
  // 查询线索列表
  clueLibraryList: `${baseUrl}/api/kunlun/event/clues:search`,
  // 删除线索
  deleteClue: `${baseUrl}/api/kunlun/event/clues:delete`,
  // 关联身份列表
  identityList: `${baseUrl}/api/kunlun/event/identitys:search`,
  // 删除关联身份
  identityDelete: `${baseUrl}/api/kunlun/event/identitys/{id}`,
  // 获取底库列表
  albums: `${galaxyUrl}/api/galaxy/v1/album/list`,
  // 确认身份
  confimIdentity: `${baseUrl}/api/kunlun/event/clues:confirmIdentity`,
  // 1:n检索
  albumsSearch: `${galaxyUrl}/api/galaxy/v1/album/search`,
  // 全目标布控
  deployAll: `${baseUrl}/api/kunlun/event/clues:deployAll`,
  // 导出线索
  exportClue: `${baseUrl}/api/kunlun/event/events/clues:export`,
  deptTree: `${galaxyUrl}/api/galaxy/v1/auth/organizations/queryTree`, // 部门树
  personTree: `${galaxyUrl}/api/galaxy/v1/auth/organizations/queryOrgTreeAndUser`, // 部门树
};

// service methods
const eventsManageSrv = {
  // 查询事件列表（分页）
  getEventList(params) {
    return MegHttp.httpPost(urls.list, params);
  },
  // 创建目标档案
  createEvent(params) {
    return MegHttp.httpPost(urls.create, params);
  },
  // 编辑目标档案
  editEvent(id, params) {
    return MegHttp.httpPatch(urls.edit.replace(/{id}/, id), params);
  },
  // 删除目标档案
  deleteEvent(id) {
    return MegHttp.httpDelete(urls.delete.replace(/{id}/, id));
  },
  // 导出目标档案
  exportEvent(id, params) {
    return MegHttp.httpPost(urls.export.replace(/{id}/, id), { params });
  },
  // 研判过程查询
  processList(params) {
    return MegHttp.httpPost(urls.processList, params);
  },
  // 关联身份列表
  identityList(params) {
    return MegHttp.httpPost(urls.identityList, params);
  },
  // 删除关联身份
  identityDelete(id) {
    return MegHttp.httpDelete(urls.identityDelete.replace(/{id}/, id));
  },
  // 事件关联数据查询
  relatedEvents(params) {
    return MegHttp.httpPost(urls.relatedEvents, params);
  },
  // 根据eventId,查询事件详情
  eventsDetailByOne(eventId) {
    return MegHttp.httpGet(urls.eventsDetailByOne.replace(/{id}/, eventId));
  },
  // 线索库聚合
  clueCategory(params) {
    return MegHttp.httpPost(urls.clueAggList, params);
  },
  // 查询线索列表
  clueLibraryList(params) {
    return MegHttp.httpPost(urls.clueLibraryList, params);
  },
  // 删除线索
  deleteClue(params) {
    return MegHttp.httpPost(urls.deleteClue, params);
  },
  fetchAlbums(params) {
    return MegHttp.httpPost(urls.albums, params);
  },
  confimIdentity(params) {
    return MegHttp.httpPost(urls.confimIdentity, params);
  },
  // 单人检索
  albumsSearch(params) {
    return MegHttp.httpPost(urls.albumsSearch, params);
  },
  // 全目标布控
  createDeployAll(params) {
    return MegHttp.httpPost(urls.deployAll, params);
  },
  // 导出线索库
  exportClue(params) {
    return MegHttp.httpPost(urls.exportClue, params);
  },
  getDeptTree(params = {}) {
    return MegHttp.httpGet(urls.deptTree, params);
  },
  getPersonTree(params = {}) {
    return MegHttp.httpGet(urls.personTree, params);
  },
};

export default eventsManageSrv;
