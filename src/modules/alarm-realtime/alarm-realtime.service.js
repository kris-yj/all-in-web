/* Automatically generated by './build/add-module.js' */
import MegHttp from 'megvii-http';
import config from '@/utils/config.utils';

// path prefix
const baseUrl = config.apiPath.service; // 基础地址
const middleUrl = config.apiPath.galaxyService; // 基础地址
// const auth = config.apiPath.auth; // auth地址

// service path
const urls = {
  cameraDetailById: `${baseUrl}/api/kunlun/event/cameras`, // 相机详细信息

  cameraListByDepartment: `${baseUrl}/api/galaxy/v1/device/tree`, // 按部门获取重点单位相机树
  // cameraListByDepartment: `${baseUrl}/api/kunlun/event/cameras/tree`, // 按部门获取重点单位相机树
  structCameraList: `${baseUrl}/api/kunlun/analysis/realtime/cameras:nalysistree`,
  todayCaptureCount: `${middleUrl}/api/galaxy/v1/capture/dashboard/statistics/nonProperties:queryCount`, // 今日抓拍结构化信息
  captureRealTimeList: `${middleUrl}/api/galaxy/v1/capture/subscription/messages`, // 抓拍实时订阅查询

  getCurrDayAlarmList: `${baseUrl}/api/kunlun/event/realtimeAlarms/todayAlarms`, // 今日报警列表
  getCurrDayAlarmSumData: `${baseUrl}/api/kunlun/event/realtimeAlarms/todayAlarmSums`, // 今日报警统计

  getCustomSelectSetting: `${baseUrl}/api/kunlun/event/videoConfig`, // 获取用户选择配置
  setCustomSelectSetting: `${baseUrl}/api/kunlun/event/videoConfigs`, // 设置用户选择配置

  deviceVideoAddress: `${baseUrl}/api/galaxy/v1/device/cameras:searchOpenVideoInfo`, // 获取流播放器播放地址
  deviceVideoAddressForStruct: `${baseUrl}/api/galaxy/v1/analysis/realtime/videoInfo`, // todo: 后续需要统一更换此接口
  videoStreamAddress: `${baseUrl}/api/gmp/v1/stream/getAddr`, // GMP 请求开流websocket地址
  // ======  new  ======
  getSubConfiguration: `${baseUrl}/api/kunlun/event/realtimeAlarms/subscribes`, // 获取报警订阅设置信息
  saveSubConfiguration: `${baseUrl}/api/kunlun/event/realtimeAlarms/subscribeDeploys`, // 保存报警订阅信息
  updateCameraAlbum: `${baseUrl}/api/kunlun/event/realtimeAlarms/subscribeCameraAlbums`, // 修改订阅（相机底库）
  getCameraAlbum: `${baseUrl}/api/kunlun/event/cameraAlbums:search`, // 查询（相机底库）
  getMultiStagesAlarmStatistics: `${baseUrl}/api/alarm/v5/realTimeAlarm/groupCurrDayAlarmStatistics`, // 实时报警-统计本地集群、订阅报警和推送报警数据,

};

const alarmRealTimeSrv = {
  /**
   * @description 请求开流websocket地址
   */
  getVideoStreamAddress(request = {}) {
    return MegHttp.httpPost(urls.videoStreamAddress, request);
  },
  /**
   * @description 打开设备视频流地址
   */
  getDeviceVideoAddress(request = {}) {
    return MegHttp.httpGet(urls.deviceVideoAddress, request);
  },

  getDeviceVideoAddressForStruct(request = {}) {
    return MegHttp.httpGet(urls.deviceVideoAddressForStruct, request);
  },
  /**
   * 按部门获取重点单位设备树
   */
  getCameraListByDepartment(params) {
    return MegHttp.httpPost(urls.cameraListByDepartment, params, { canCancel: true });
  },
  /**
   * 设备树
   */
  getStructCameraList() {
    return MegHttp.httpPost(urls.structCameraList);
  },

  /**
   * 获取今日抓拍总数
   * @param {Object} request
   */
  getTodayCaptureCount(request = {}) {
    return MegHttp.httpPost(urls.todayCaptureCount, request);
  },

  /**
   * 获取抓拍实时订阅列表
   * @param {Object} request
   */
  getCaptureRealTimeList(request = {}) {
    return MegHttp.httpGet(urls.captureRealTimeList, request);
  },

  /**
   * 获取今日报警列表
   * @param {Object} request
   */
  getCurrDayAlarmList(request = {}) {
    return MegHttp.httpPost(urls.getCurrDayAlarmList, request);
  },

  /**
   * 获取今日报警统计
   * @param {Object} request
   */
  getCurrDayAlarmSumData(request = {}) {
    return MegHttp.httpGet(urls.getCurrDayAlarmSumData, request);
  },

  /**
   * 获取设备详情
   */
  getDeviceDetail(request) {
    return MegHttp.httpGet(`${urls.cameraDetailById}/${request.id}`);
  },

  /**
   * 获取用户选择设置
   * @param {Object} request
   */
  getCustomSelectSetting(request = {}) {
    return MegHttp.httpGet(urls.getCustomSelectSetting, request);
  },

  /**
   * 设置用户选择设置
   * @param {Object} request
   */
  setCustomSelectSetting(request = {}) {
    return MegHttp.httpPost(urls.setCustomSelectSetting, request);
  },
  // ====== new ======
  /**
   * 实时报警-统计本地集群、订阅报警和推送报警数据
   * @param {Object} request
   */
  getMultiStagesAlarmStatistics(request = {}) {
    return MegHttp.httpGet(urls.getMultiStagesAlarmStatistics, request);
  },

  /**
   * 获取报警订阅设置信息
   * @param {Object} request
   */
  getSubConfiguration(request = {}) {
    return MegHttp.httpGet(urls.getSubConfiguration, request);
  },
  /**
   * 保存报警订阅设置信息
   * @param {Object} request
   */
  saveSubConfiguration(request = {}) {
    return MegHttp.httpPut(urls.saveSubConfiguration, request);
  },
  /**
   * 更新相机底库信息
   * @param {Object} request
   */
  updateCameraAlbum(request = {}) {
    return MegHttp.httpPut(urls.updateCameraAlbum, request, {
      transformParams: false
    });
  },
  /**
   * 查询相机底库信息
   * @param {Object} request
   */
  getCameraAlbum(request = {}) {
    return MegHttp.httpPost(urls.getCameraAlbum, request);
  },

};

export default alarmRealTimeSrv;
