/* Automatically generated by './build/add-module.js' */
import MegHttp from 'megvii-http';
import config from '@/utils/config.utils';

// path prefix
const baseUrl = config.apiPath.service;
// const authUrl = window.config.globalConfig.apiPath.auth;

// service path
const urls = {
  getRegisterToken: `${baseUrl}/api/face/v6/cascade/registry/getToken`,
  decryptRegisterToken: `${baseUrl}/api/face/v6/cascade/registry/decryptToken`,
  addRegisterNode: `${baseUrl}/api/face/v6/cascade/registry/addNode`,
  editRegisterNode: `${baseUrl}/api/face/v6/cascade/registry/editNode`,
  deleteRegisterNode: `${baseUrl}/api/face/v6/cascade/registry/deleteNode`,
  modifyNodeName: `${baseUrl}/api/face/v6/cascade/registry/updateName`,
  getCurrentNodeInfo: `${baseUrl}/api/face/v6/cascade/registry/getCurrentNode`,
  getSubNodeInfo: `${baseUrl}/api/face/v6/cascade/registry/getChildNode`,
  testNodeConnectStatus: `${baseUrl}/api/face/v6/cascade/registry/testConnect`
};

export default {
  /**
   * 获取注册节点的token值
   */
  getRegisterToken(params = {}) {
    return MegHttp.httpGet(urls.getRegisterToken, params);
  },
  /**
   * 解析注册码
   */
  decryptRegisterToken(params = {}) {
    return MegHttp.httpPost(urls.decryptRegisterToken, params);
  },
  /**
   * 增加注册节点
   */
  addRegisterNode(params = {}) {
    return MegHttp.httpPost(urls.addRegisterNode, params);
  },
  /**
   * 编辑节点信息
   */
  editRegisterNode(params = {}) {
    return MegHttp.httpPost(urls.editRegisterNode, params);
  },
  /**
   * 删除节点信息
   */
  deleteRegisterNode(params = {}) {
    return MegHttp.httpPost(urls.deleteRegisterNode, params);
  },
  /**
   * 修改主节点名
   */
  modifyNodeName(params = {}) {
    return MegHttp.httpPost(urls.modifyNodeName, params);
  },
  /**
   * 获取当前节点信息
   */
  getCurrentNodeInfo(params = {}) {
    return MegHttp.httpGet(urls.getCurrentNodeInfo, params);
  },
  /**
   * 获取子节点信息
   */
  getSubNodeInfo(params = {}) {
    return MegHttp.httpGet(urls.getSubNodeInfo, params);
  },
  /**
   * 测试节点连接信息
   */
  testNodeConnectStatus(params = {}) {
    return MegHttp.httpPost(urls.testNodeConnectStatus, params);
  }
};
