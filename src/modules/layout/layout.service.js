/* Automatically generated by './build/add-module.js' */
import MegHttp from 'megvii-http';
import config from '@/utils/config.utils';

// path prefix
const galaxyUrl = config.apiPath.galaxyService;
const baseUrl = config.apiPath.service; // 基础地址

// service path
const urls = {
  'system': `${galaxyUrl}/api/galaxy/v1/system/configuration/map`, // 系统设置列表(修改为中台服务)
  'dataMapList': `${galaxyUrl}/api/galaxy/v1/system/dictionary/data/getTypeCodesMap`, // 数据字典列表(修改为中台服务)
  'userProfile': `${galaxyUrl}/api/galaxy/v1/auth/users/profile`, // 登录用户信息
  'menus': `${galaxyUrl}/api/galaxy/v1/auth/permission`, // 系统菜单
  'loginout': `${galaxyUrl}/api/galaxy/v1/auth/users/logout`,
  'passwordUpdate': `${galaxyUrl}/api/galaxy/v1/auth/users/updatePwd`, // 更新密码
  'getNewAlarm': `${baseUrl}/api/kunlun/event/realtimeAlarms/newAlarmSums` // 获取某个时间点后的最新报警
};

// service methods
const LayoutSrv = {
  /**
   * 获取某个时间点后的最新报警
   */
  getNewAlarm(params = {}) {
    return MegHttp.httpPost(urls.getNewAlarm, params);
  },
  /**
   * 获取数据字段配置
   */
  getDataMapList() {
    return MegHttp.httpGet(urls.dataMapList);
  },
  /**
   * 获取系统配置
   */
  getSystemInfo() {
    return MegHttp.httpGet(urls.system);
  },
  /**
   * 获取系统配置
   */
  getUserProfile() {
    const params = {
      noTokenExpireNotice: true
    };
    return MegHttp.httpPost(urls.userProfile, params);
  },
  /**
   * 获取系统菜单
   */
  getMenus() {
    const params = {
      'clientAppId': clientAppId,
      'noTokenExpireNotice': true,
      'showErrorToast': true
    };
    return MegHttp.httpPost(urls.menus, params);
  },
  /**
   * 获取系统菜单
   */
  loginOut() {
    return MegHttp.httpPost(urls.loginout);
  },
  /**
   * 更新密码
   * @param {*} params
   */
  updatePassword(params = {}) {
    return MegHttp.httpPost(urls.passwordUpdate, params);
  },
};

export default LayoutSrv;
